Grid
  { message = "This is a computer generated file.  Do not edit."
  , gridName = "gridhaskell"
  , gridLicence = "{-GPLV3.0 or later copyright brmlab.cz contact timothyhobbs@seznam.czCopyright 2012.This program is free software: you can redistribute it and/or modifyit under the terms of the GNU General Public License as published bythe Free Software Foundation, either version 3 of the License, or(at your option) any later version.This program is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See theGNU General Public License for more details.You should have received a copy of the GNU General Public Licensealong with this program.  If not, see <http://www.gnu.org/licenses/>.-}"
  , gridImports = [ "Control.Concurrent"
                  , "System.Exit"
                  ]
  , gridComments = [ ( ( -1
                       , 1
                       )
                     , "This is a comment."
                     )
                   , ( ( 3
                       , 9
                       )
                     , "These are some loose cells..."
                     )
                   ]
  , gridCells = Start
                  { point = ( -1
                            , 0
                            )
                  , prototype = ""
                  , code = "main"
                  , arguments = []
                  , next = Lambda
                             { point = ( 3
                                       , 7
                                       )
                             , arguments = []
                             , arrow = ( 1
                                       , 3
                                       )
                             , body = Action
                                        { point = ( 2
                                                  , 1
                                                  )
                                        , code = "getChar"
                                        , return = False
                                        , push = True
                                        , pull = False
                                        , label = Nothing
                                        , path = Nothing
                                        , next = Action
                                                   { point = ( 3
                                                             , 6
                                                             )
                                                   , code = "'n'"
                                                   , return = True
                                                   , push = True
                                                   , pull = False
                                                   , label = Nothing
                                                   , path = Nothing
                                                   , next = Action
                                                              { point = ( 7
                                                                        , 3
                                                                        )
                                                              , code = "(==)"
                                                              , return = True
                                                              , push = True
                                                              , pull = True
                                                              , label = Nothing
                                                              , path = Nothing
                                                              , next = Return
                                                                         { point = ( 3
                                                                                   , 10
                                                                                   )
                                                                         }
                                                              }
                                                   }
                                        }
                             , next = Which
                                        { point = ( 0
                                                  , 4
                                                  )
                                        , patterns = [ Pattern
                                                         { patternPoint = ( 2
                                                                          , 5
                                                                          )
                                                         , pattern = "True"
                                                         , action = Action
                                                                      { point = ( 2
                                                                                , 6
                                                                                )
                                                                      , code = "'n'"
                                                                      , return = True
                                                                      , push = True
                                                                      , pull = False
                                                                      , label = Nothing
                                                                      , path = Nothing
                                                                      , next = Action
                                                                                 { point = ( 2
                                                                                           , 7
                                                                                           )
                                                                                 , code = "putChar"
                                                                                 , return = False
                                                                                 , push = False
                                                                                 , pull = True
                                                                                 , label = Nothing
                                                                                 , path = Nothing
                                                                                 , next = Exit
                                                                                            { point = ( 2
                                                                                                      , 8
                                                                                                      )
                                                                                            , signal = "ExitSuccess"
                                                                                            }
                                                                                 }
                                                                      }
                                                         }
                                                     , Pattern
                                                         { patternPoint = ( -2
                                                                          , 5
                                                                          )
                                                         , pattern = "False"
                                                         , action = NewEmptyMVar
                                                                      { point = ( 3
                                                                                , 8
                                                                                )
                                                                      , labelPoint = ( -1
                                                                                     , 6
                                                                                     )
                                                                      , mvar = "char"
                                                                      , next = Fork
                                                                                 { point = ( 4
                                                                                           , 3
                                                                                           )
                                                                                 , newThreads = [ Action
                                                                                                    { point = ( -4
                                                                                                              , 9
                                                                                                              )
                                                                                                    , code = "getChar"
                                                                                                    , return = False
                                                                                                    , push = True
                                                                                                    , pull = False
                                                                                                    , label = Nothing
                                                                                                    , path = Nothing
                                                                                                    , next = PutMVar
                                                                                                               { point = ( 2
                                                                                                                         , 10
                                                                                                                         )
                                                                                                               , labelPoint = ( -3
                                                                                                                              , 10
                                                                                                                              )
                                                                                                               , mvar = "char"
                                                                                                               , next = End
                                                                                                                          { point = ( -4
                                                                                                                                    , 11
                                                                                                                                    )
                                                                                                                          }
                                                                                                               }
                                                                                                    }
                                                                                                , TakeMVar
                                                                                                    { point = ( -1
                                                                                                              , 11
                                                                                                              )
                                                                                                    , labelPoint = ( -2
                                                                                                                   , 11
                                                                                                                   )
                                                                                                    , mvar = "char"
                                                                                                    , next = Action
                                                                                                               { point = ( 4
                                                                                                                         , 12
                                                                                                                         )
                                                                                                               , code = "putChar"
                                                                                                               , return = False
                                                                                                               , push = False
                                                                                                               , pull = True
                                                                                                               , label = Nothing
                                                                                                               , path = Nothing
                                                                                                               , next = Jump
                                                                                                                          { point = ( -1
                                                                                                                                    , 13
                                                                                                                                    )
                                                                                                                          , path = Just
                                                                                                                                     SteppingStone
                                                                                                                                       { point = ( 0
                                                                                                                                                 , 12
                                                                                                                                                 )
                                                                                                                                       , next = SteppingStone
                                                                                                                                                  { point = ( -1
                                                                                                                                                            , 2
                                                                                                                                                            )
                                                                                                                                                  , next = PathDestination
                                                                                                                                                             { point = ( 3
                                                                                                                                                                       , 7
                                                                                                                                                                       )
                                                                                                                                                             }
                                                                                                                                                  }
                                                                                                                                       }
                                                                                                                          }
                                                                                                               }
                                                                                                    }
                                                                                                ]
                                                                                 }
                                                                      }
                                                         }
                                                     ]
                                        }
                             }
                  }
  , gridLooseCells = [ Action
                         { point = ( 2
                                   , 9
                                   )
                         , code = "getChar"
                         , return = False
                         , push = True
                         , pull = False
                         , label = Nothing
                         , path = Nothing
                         , next = End
                                    { point = ( 5
                                              , 5
                                              )
                                    }
                         }
                     ]
  }